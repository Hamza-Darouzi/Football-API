// <auto-generated />
using System;
using System.Collections.Generic;
using Football.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Football.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Football.Core.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FoundingDate")
                        .HasColumnType("date");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("Name");

                    b.ToTable("Club", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoundingDate = new DateTime(1899, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 1,
                            Name = "Fc Barcelona"
                        },
                        new
                        {
                            Id = 2,
                            FoundingDate = new DateTime(1902, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeagueId = 1,
                            Name = "Real Madrid"
                        },
                        new
                        {
                            Id = 3,
                            LeagueId = 3,
                            Name = "PSG"
                        },
                        new
                        {
                            Id = 4,
                            LeagueId = 4,
                            Name = "Napoli"
                        },
                        new
                        {
                            Id = 5,
                            LeagueId = 2,
                            Name = "Manchester City"
                        },
                        new
                        {
                            Id = 6,
                            LeagueId = 2,
                            Name = "Liverpool"
                        });
                });

            modelBuilder.Entity("Football.Core.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("League", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "La Liga"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Premiere League"
                        },
                        new
                        {
                            Id = 3,
                            Name = "League 1"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Serie A"
                        });
                });

            modelBuilder.Entity("Football.Core.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthYear")
                        .HasColumnType("date");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("Name");

                    b.ToTable("Player", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthYear = new DateTime(1987, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 1,
                            Name = "Lioniel Messi",
                            Nation = "Argentina"
                        },
                        new
                        {
                            Id = 2,
                            BirthYear = new DateTime(1984, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 1,
                            Name = "Andres Iniesta",
                            Nation = "Spain"
                        },
                        new
                        {
                            Id = 3,
                            BirthYear = new DateTime(1980, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 1,
                            Name = "Xavi Hernandez",
                            Nation = "Spain"
                        },
                        new
                        {
                            Id = 4,
                            BirthYear = new DateTime(1985, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 2,
                            Name = "Cristiano Ronaldo",
                            Nation = "Portugal"
                        },
                        new
                        {
                            Id = 5,
                            BirthYear = new DateTime(1987, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 2,
                            Name = "Karim Benzema",
                            Nation = "France"
                        },
                        new
                        {
                            Id = 6,
                            BirthYear = new DateTime(1982, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClubId = 2,
                            Name = "KAKA",
                            Nation = "Brazil"
                        });
                });

            modelBuilder.Entity("Football.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.ComplexProperty<Dictionary<string, object>>("RefreshToken", "Football.Core.Models.User.RefreshToken#RefreshToken", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("ExpireAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(MAX)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Football.Core.Models.Club", b =>
                {
                    b.HasOne("Football.Core.Models.League", "League")
                        .WithMany("Clubs")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("League");
                });

            modelBuilder.Entity("Football.Core.Models.Player", b =>
                {
                    b.HasOne("Football.Core.Models.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("Football.Core.Models.Club", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Football.Core.Models.League", b =>
                {
                    b.Navigation("Clubs");
                });
#pragma warning restore 612, 618
        }
    }
}
